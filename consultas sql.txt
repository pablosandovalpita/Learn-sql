--1- Devuelve todas las películas
SELECT  MOVIE_NAME FROM MOVIES m 
--2- Devuelve todos los géneros existentes
SELECT GENRE_NAME FROM GENRES 
--3- Devuelve la lista de todos los estudios de grabación que estén activos
SELECT STUDIO_NAME FROM STUDIOS WHERE STUDIO_ACTIVE <> 0
--4- Devuelve una lista de los 20 últimos miembros en anotarse a la plataforma
SELECT * FROM USERS ORDER BY USER_JOIN_DATE DESC LIMIT 20
--5- Devuelve las 20 duraciones de películas más frecuentes, ordenados de mayor a menor
SELECT  MOVIE_DURATION  COUNT (*),FROM MOVIES  AS FREQ GROUP BY MOVIE_DURATION ORDER BY FREQ DESC LIMIT 20
--6- Devuelve las películas del año 2000 en adelante que empiecen por la letra A.
SELECT m.MOVIE_NAME FROM MOVIES m WHERE MOVIE_RELEASE_DATE > '2000-01-01' AND MOVIE_NAME LIKE 'A%'
--7- Devuelve los actores nacidos un mes de Junio
SELECT a.ACTOR_NAME
FROM ACTORS a
WHERE MONTH(a.ACTOR_BIRTH_DATE) = 6
--8- Devuelve los actores nacidos cualquier mes que no sea Junio y que sigan vivos
SELECT a.ACTOR_NAME FROM ACTORS a WHERE MONTH(a.ACTOR_BIRTH_DATE)<>6 AND a.ACTOR_DEAD_DATE IS NULL
--9- Devuelve el nombre y la edad de todos los directores menores o iguales de 50 años que estén vivos
SELECT
	DIRECTOR_NAME,
	DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE, TODAY()) AS "AGE"
FROM
	DIRECTORS
WHERE
	DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE, TODAY()) <= 50
	AND DIRECTOR_DEAD_DATE IS NULL
--10- Devuelve el nombre y la edad de todos los actores menores de 50 años que hayan fallecido
SELECT ACTOR_NAME, DATEDIFF(YEAR, ACTOR_BIRTH_DATE, ACTOR_DEAD_DATE) FROM ACTORS WHERE DATEDIFF(YEAR, ACTOR_BIRTH_DATE, ACTOR_DEAD_DATE) < 50 AND ACTOR_DEAD_DATE IS NOT NULL
--11- Devuelve el nombre de todos los directores menores o iguales de 40 años que estén vivos
SELECT DIRECTOR_NAME, DIRECTOR_BIRTH_DATE FROM DIRECTORS WHERE DIRECTOR_DEAD_DATE IS NULL AND DATEDIFF(YEAR, DIRECTOR_BIRTH_DATE, TODAY()) <= 40;
--12- Indica la edad media de los directores vivos
SELECT AVG(DATEDIFF(YEAR, d.DIRECTOR_BIRTH_DATE, TODAY())) AS AVG_AGE FROM DIRECTORS d WHERE d.DIRECTOR_DEAD_DATE IS NULL;
--13- Indica la edad media de los actores que han fallecido
SELECT AVG(DATEDIFF(YEAR,a.ACTOR_DEAD_DATE, TODAY())) AS AVG_AGE FROM ACTORS a WHERE a.ACTOR_DEAD_DATE IS NOT NULL 
--14- Devuelve el nombre de todas las películas y el nombre del estudio que las ha realizado
SELECT
	m.MOVIE_NAME,
	s.STUDIO_NAME
FROM
	MOVIES m
INNER JOIN STUDIOS s ON
	s.STUDIO_ID = m.STUDIO_ID
--15- Devuelve los miembros que accedieron al menos una película entre el año 2010 y el 2015
SELECT DISTINCT(u.USER_NAME)  FROM USERS u INNER JOIN USER_MOVIE_ACCESS uma ON u.USER_ID = uma.USER_ID WHERE YEAR(UMA.ACCESS_DATE) >= 2010 AND YEAR(UMA.ACCESS_DATE) <= 2015
--16- Devuelve cuantas películas hay de cada país
SELECT n.NATIONALITY_NAME, COUNT(*) AS TOTAL_PELICULAS 
FROM MOVIES m
INNER JOIN NATIONALITIES n ON n.NATIONALITY_ID=m.NATIONALITY_ID
GROUP BY n.NATIONALITY_NAME
--17- Devuelve todas las películas que hay de género documental
SELECT m.MOVIE_NAME 
FROM MOVIES m
INNER JOIN GENRES g ON g.GENRE_ID=m.GENRE_ID
WHERE g.GENRE_NAME = 'Documentary' 
--18- Devuelve todas las películas creadas por directores nacidos a partir de 1980 y que todavía están vivos
SELECT MOVIE_NAME m
FROM MOVIES m 
INNER JOIN DIRECTORS d ON m.DIRECTOR_ID=d.DIRECTOR_ID
WHERE YEAR(DIRECTOR_BIRTH_DATE)> 1980 
AND DIRECTOR_DEAD_DATE IS NULL
--19- Indica si hay alguna coincidencia de nacimiento de ciudad (y si las hay, indicarlas) entre los miembros de la plataforma y los directores
SELECT d.DIRECTOR_NAME , u.USER_ID
FROM DIRECTORS d
INNER JOIN USERS u ON UPPER(d.DIRECTOR_BIRTH_PLACE)= UPPER(u.USER_TOWN)
--20- Devuelve el nombre y el año de todas las películas que han sido producidas por un estudio que actualmente no esté activo
SELECT m.movie_name, YEAR(m.movie_release_date) AS AÑO FROM MOVIES m INNER JOIN STUDIOS s ON m.STUDIO_ID =s.STUDIO_ID WHERE s.STUDIO_ACTIVE = 0;
--21- Devuelve una lista de las últimas 10 películas a las que se ha accedido
SELECT MOVIE_ID
FROM USER_MOVIE_ACCESS ORDER BY ACCESS_DATE DESC
LIMIT 10
--22- Indica cuántas películas ha realizado cada director antes de cumplir 41 años
SELECT d.DIRECTOR_NAME, COUNT(m.MOVIE_ID) AS NUM_MOVIES FROM MOVIES m JOIN DIRECTORS d ON m.DIRECTOR_ID = d.DIRECTOR_ID WHERE DATEDIFF(YEAR, d.DIRECTOR_BIRTH_DATE, m.MOVIE_RELEASE_DATE) < 41 GROUP BY (d.DIRECTOR_NAME)
--23- Indica cuál es la media de duración de las películas de cada director
SELECT d.DIRECTOR_NAME, AVG(m.MOVIE_DURATION)
FROM DIRECTORS d 
INNER JOIN MOVIES m ON d.DIRECTOR_ID=m.DIRECTOR_ID
GROUP BY d.DIRECTOR_NAME
--24- Indica cuál es el nombre y la duración mínima de las películas a las que se ha accedido en los últimos 2 años por los miembros del plataforma (La “fecha de ejecución” de esta consulta es el 25-01-2019)
SELECT GROUP_CONCAT(M.MOVIE_NAME) AS MOVIE_NAME,
       M.MOVIE_DURATION
FROM USER_MOVIE_ACCESS UMA
INNER JOIN MOVIES M ON UMA.MOVIE_ID = M.MOVIE_ID
WHERE DATEADD(YEAR, -2, DATE '2019-01-25') < UMA.ACCESS_DATE
GROUP BY M.MOVIE_DURATION
ORDER BY M.MOVIE_DURATION ASC
LIMIT 1


--25- Indica el número de películas que hayan hecho los directores durante las décadas de los 60, 70 y 80 que contengan la palabra “The” en cualquier parte del título
SELECT d.DIRECTOR_NAME, COUNT(m.MOVIE_NAME) AS MOVIE_QUANTITY
FROM DIRECTORS d
INNER JOIN MOVIES m ON d.DIRECTOR_ID=m.DIRECTOR_ID
WHERE m.MOVIE_RELEASE_DATE BETWEEN '1960-01-01'AND '1989-12-31'  AND m.MOVIE_NAME LIKE '%The%'
GROUP BY d.DIRECTOR_NAME
--26- Lista nombre, nacionalidad y director de todas las películas
SELECT m.MOVIE_NAME,n.NATIONALITY_NAME,d.DIRECTOR_NAME 
FROM MOVIES m
INNER JOIN DIRECTORS d ON m.DIRECTOR_ID=d.DIRECTOR_ID 
INNER JOIN NATIONALITIES n ON m.NATIONALITY_ID=n.NATIONALITY_ID
--27- Muestra las películas con los actores que han participado en cada una de ellas
SELECT m.MOVIE_NAME, a.ACTOR_NAME
FROM MOVIES m
INNER JOIN MOVIES_ACTORS ma ON m.MOVIE_ID=ma.MOVIE_ID
INNER JOIN ACTORS a ON a.ACTOR_ID=ma.ACTOR_ID
--28- Indica cual es el nombre del director del que más películas se ha accedido
SELECT MAX(d.DIRECTOR_NAME)
FROM MOVIES m
INNER JOIN USER_MOVIE_ACCESS u ON m.MOVIE_ID=u.MOVIE_ID
INNER JOIN DIRECTORS d ON d.DIRECTOR_ID=m.DIRECTOR_ID
--29- Indica cuantos premios han ganado cada uno de los estudios con las películas que han creado
SELECT s.STUDIO_NAME,SUM(a.AWARD_WIN)
FROM MOVIES m
INNER JOIN STUDIOS s ON s.STUDIO_ID=m.STUDIO_ID
INNER JOIN AWARDS a ON a.MOVIE_ID=m.MOVIE_ID
GROUP BY s.STUDIO_NAME
--30- Indica el número de premios a los que estuvo nominado un actor, pero que no ha conseguido (Si una película está nominada a un premio, su actor también lo está)
SELECT a.ACTOR_NAME,SUM(a.AWARD_NOMINATION)
FROM ACTORS a 
INNER JOIN MOVIES_ACTORS ma ON ma.ACTOR_ID=a.ACTOR_ID
INNER JOIN AWARDS a ON a.MOVIE_ID= ma.MOVIE_ID
GROUP BY a.ACTOR_NAME
--31- Indica cuantos actores y directores hicieron películas para los estudios no activos
SELECT m.MOVIE_NAME,COUNT(ma.ACTOR_ID) AS TOTAL_ACTORS ,COUNT(m.DIRECTOR_ID) AS TOTAL_DIRECTORS
FROM MOVIES m
INNER JOIN STUDIOS s ON s.STUDIO_ID=m.STUDIO_ID
INNER JOIN MOVIES_ACTORS ma ON m.MOVIE_ID=ma.MOVIE_ID
GROUP BY m.MOVIE_NAME

SELECT COUNT(DISTINCT M.DIRECTOR_ID) AS DIRECTOR_NUMBER,
       COUNT(DISTINCT MA.ACTOR_ID) AS ACTOR_NUMBER
FROM STUDIOS S
INNER JOIN MOVIES M ON M.STUDIO_ID = S.STUDIO_ID
INNER JOIN MOVIES_ACTORS MA ON MA.MOVIE_ID = M.MOVIE_ID
WHERE S.STUDIO_ACTIVE = FALSE

--32- Indica el nombre, ciudad, y teléfono de todos los miembros de la plataforma que hayan accedido películas que hayan sido nominadas a más de 150 premios y ganaran menos de 50
SELECT u.USER_NAME, u.USER_TOWN, u.USER_PHONE
FROM USERS u
INNER JOIN USER_MOVIE_ACCESS uma ON u.USER_ID=uma.USER_ID
INNER JOIN AWARDS a ON a.MOVIE_ID=uma.MOVIE_ID
WHERE a.AWARD_NOMINATION >150 AND a.AWARD_WIN <50
--33- Comprueba si hay errores en la BD entre las películas y directores (un director muerto en el 76 no puede dirigir una película en el 88)
SELECT m.MOVIE_NAME, d.DIRECTOR_NAME, m.MOVIE_ID, d.DIRECTOR_ID
FROM MOVIES m
INNER JOIN DIRECTORS d ON d.DIRECTOR_ID=m.DIRECTOR_ID 
WHERE d.DIRECTOR_DEAD_DATE < m.MOVIE_RELEASE_DATE
--34- Utilizando la información de la sentencia anterior, modifica la fecha de defunción a un año más tarde del estreno de la película (mediante sentencia SQL)

UPDATE DIRECTORS
SET DIRECTOR_DEAD_DATE =
  (SELECT MAX(DATEADD(YEAR, 1, M.MOVIE_RELEASE_DATE)) AS DIRECTOR_DEAD_DATE
   FROM MOVIES M
   INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID
   WHERE D.DIRECTOR_DEAD_DATE IS NOT NULL
     AND D.DIRECTOR_DEAD_DATE < M.MOVIE_RELEASE_DATE
     AND D.DIRECTOR_ID = DIRECTORS.DIRECTOR_ID
   GROUP BY DIRECTOR_NAME,
            DIRECTOR_DEAD_DATE)
WHERE DIRECTOR_ID IN
    (SELECT DISTINCT D.DIRECTOR_ID
     FROM MOVIES M
     INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID
     WHERE D.DIRECTOR_DEAD_DATE IS NOT NULL
       AND D.DIRECTOR_DEAD_DATE < M.MOVIE_RELEASE_DATE)`
       
--35- Indica cuál es el género favorito de cada uno de los directores cuando dirigen una película
       WITH GENRE_COUNTS AS
  (SELECT D.DIRECTOR_ID,
          D.DIRECTOR_NAME,
          G.GENRE_ID,
          G.GENRE_NAME,
          COUNT(*) AS NUM_MOVIES
   FROM MOVIES M
   INNER JOIN GENRES G ON M.GENRE_ID = G.GENRE_ID
   INNER JOIN DIRECTORS D ON M.DIRECTOR_ID = D.DIRECTOR_ID
   GROUP BY D.DIRECTOR_ID,
            D.DIRECTOR_NAME,
            G.GENRE_ID,
            G.GENRE_NAME),
     MAX_GENRE AS
  (SELECT DIRECTOR_ID,
          MAX(NUM_MOVIES) AS MAX_MOVIES
   FROM GENRE_COUNTS
   GROUP BY DIRECTOR_ID)
SELECT GC.DIRECTOR_NAME,
       GROUP_CONCAT(GC.GENRE_NAME) AS GENRE_NAME
FROM GENRE_COUNTS GC
INNER JOIN MAX_GENRE MG ON GC.DIRECTOR_ID = MG.DIRECTOR_ID
AND GC.NUM_MOVIES = MG.MAX_MOVIES
GROUP BY GC.DIRECTOR_NAME;
--36- Indica cuál es la nacionalidad favorita de cada uno de los estudios en la producción de las películas
WITH TOTAL_NAT AS
  (SELECT COUNT(N.NATIONALITY_ID) AS NUM_MOVIES,
          S.STUDIO_NAME,
          N.NATIONALITY_NAME,
          S.STUDIO_ID,
          N.NATIONALITY_ID
   FROM MOVIES M
   INNER JOIN NATIONALITIES N ON N.NATIONALITY_ID = M.NATIONALITY_ID
   INNER JOIN STUDIOS S ON S.STUDIO_ID = M.STUDIO_ID
   GROUP BY S.STUDIO_ID,
            N.NATIONALITY_ID
   ORDER BY S.STUDIO_ID ASC,
            NUM_MOVIES DESC),
     MAX_NAT AS
  (SELECT STUDIO_ID,
          MAX(NUM_MOVIES) AS MAX_MOVIES
   FROM TOTAL_NAT
   GROUP BY STUDIO_ID)
SELECT STUDIO_NAME,
       GROUP_CONCAT(NATIONALITY_NAME) AS NATIONALITY_NAME
FROM TOTAL_NAT AS TN
INNER JOIN MAX_NAT MN ON TN.STUDIO_ID = MN.STUDIO_ID
AND TN.NUM_MOVIES = MN.MAX_MOVIES
GROUP BY STUDIO_NAME
--37- Indica cuál fue la primera película a la que accedieron los miembros de la plataforma cuyos teléfonos tengan como último dígito el ID de alguna nacionalidad

WITH PHONE_DIGIT AS
  (SELECT USER_NAME,
          USER_ID,
          SUBSTR(USER_PHONE, LENGTH(USER_PHONE), 1) AS LAST_NUMBER
   FROM USERS),
     USER_NAT AS
  (SELECT N.NATIONALITY_ID,
          M.USER_NAME,
          M.USER_ID
   FROM NATIONALITIES N
   INNER JOIN PHONE_DIGIT M ON N.NATIONALITY_ID = M.LAST_NUMBER),
     MOVIE_ACCESS AS
  (SELECT UN.NATIONALITY_ID,
          UN.USER_NAME,
          UMA.USER_ID,
          UMA.MOVIE_ID,
          UMA.ACCESS_DATE
   FROM USER_NAT UN
   INNER JOIN USER_MOVIE_ACCESS UMA ON UN.USER_ID = UMA.USER_ID),
     MIN_ACCESS AS
  (SELECT USER_ID,
          MIN(ACCESS_DATE) AS ACCESS_DATE
   FROM MOVIE_ACCESS
   GROUP BY USER_ID)
SELECT MOA.USER_NAME,
       M.MOVIE_NAME
FROM MOVIE_ACCESS MOA
INNER JOIN MIN_ACCESS MIA ON MOA.ACCESS_DATE = MIA.ACCESS_DATE
AND MOA.USER_ID = MIA.USER_ID
INNER JOIN MOVIES M ON MOA.MOVIE_ID = M.MOVIE_ID






